{"version":3,"file":"markdown-to-jsx.js","sources":["../src/index.js"],"sourcesContent":["import { JSDOM } from 'jsdom';\nimport { marked } from 'marked';\nimport DOMPurify from 'dompurify';\nimport PropTypes from 'prop-types';\nimport JsxParser from 'react-jsx-parser';\n\nconst windowObj = typeof window === 'undefined' ? new JSDOM('').window : window;\nconst purify = DOMPurify(windowObj).sanitize;\n\nconst parser = (str, sanitize) => {\n    let plain = str;\n    plain = String(plain)\n        .replace(/\\n/g, '<br />')\n        .replace(/\\r/g, '<br />');\n\n    let markdown = marked.parse(plain);\n    markdown = String(markdown).replace(/<p>(.+)\\<\\/p>/gim, '$1');\n    markdown = sanitize === true ? purify(markdown) : markdown;\n\n    return markdown;\n};\n\nexport const MarkdownJSX = ({ value, sanitize, ...props }) => (\n    <JsxParser\n        jsx={parser(value, sanitize)}\n        renderInWrapper={false}\n        {...props}\n    />\n);\n\nMarkdownJSX.propTypes = {\n    sanitize: PropTypes.bool,\n    value: PropTypes.string.isRequired,\n};\n\nMarkdownJSX.defaultProps = {\n    sanitize: true,\n};\n"],"names":["purify","DOMPurify","window","JSDOM","sanitize","parser","str","plain","String","replace","markdown","marked","parse","MarkdownJSX","_ref","value","props","_objectWithoutPropertiesLoose","_excluded","h","JsxParser","_extends","jsx","renderInWrapper","propTypes","PropTypes","bool","string","isRequired","defaultProps"],"mappings":"gZAOMA,EAASC,EADqB,oBAAXC,OAAyB,IAAIC,EAAM,IAAID,OAASA,QACrCE,SAE9BC,EAAS,SAACC,EAAKF,GACjB,IAAIG,EAAQD,EACZC,EAAQC,OAAOD,GACVE,QAAQ,MAAO,UACfA,QAAQ,MAAO,UAEpB,IAAIC,EAAWC,EAAOC,MAAML,GAI5B,OAHAG,EAAWF,OAAOE,GAAUD,QAAQ,mBAAoB,OAChC,IAAbL,EAAoBJ,EAAOU,GAAYA,CAGtD,EAEaG,EAAc,SAAHC,GAAM,IAAAC,EAAKD,EAALC,MAAOX,EAAQU,EAARV,SAAaY,oIAAKC,CAAAH,EAAAI,GAAA,OACnDC,EAACC,EAASC,EAAA,CACNC,IAAKjB,EAAOU,EAAOX,GACnBmB,iBAAiB,GACbP,GACN,EAGNH,EAAYW,UAAY,CACpBpB,SAAUqB,EAAUC,KACpBX,MAAOU,EAAUE,OAAOC,YAG5Bf,EAAYgB,aAAe,CACvBzB,UAAU"}